1.Да, если указать ключевое слово implements!
2.Да, если указать ключевое слово static
3.Да, если указать ключевое слово extends
4.Нет
1.Интерфейс описывает только поведение (методы) объекта, а вот состояний (полей) у него нет (кроме public static final), в то время как у абстрактного класса они могут быть.
2.Абстрактный класс наследуется (extends), а интерфейс — реализуется (implements). Мы можем наследовать только один класс, а реализовать интерфейсов — сколько угодно.
3.Абстрактные классы используются, когда есть отношение "is-a", то есть класс-наследник расширяет базовый абстрактный класс, а интерфейсы могут быть реализованы разными классами, вовсе не связанными друг с другом.
4.Все вышеперечисленное!
1.Вы ожидаете, что несвязанные классы будут реализовывать ваш интерфейс.
2.Вы хотите определить поведение конкретного типа данных, но вам не важно, кто его реализует.
3.Вы хотите использовать множественное наследование типа.
4.Все вышеперечисленное!
1.Разновидность абстрактного класса.
2.Разновидность метода.
3.Конструкция, описывающая методы, включаемая в другие классы!
4.Ничего из вышеперечисленного
1.Public!
2.Private
3.Protected
4.Final
1.extends
2.static
3.final
4.implements!
1.Да
2.Нет, если указать ключевое слово final 
3.Нет, если указать ключевое слово static
4.Нет, если указать ключевое слово default!
1.Нет
2.Да!
3.Да, если указать ключевое слово static
4.Да, если указать ключевое слово default
1.1
2.2
3.5
4.Сколько угодно!
1.Да,если указать ключевое слово extends
2.Да, если указать ключевое слово implements
3.Да, если указать ключевое слово static
4.Нет!
1.Да,если указать ключевое слово extends
2.Да, если указать ключевое слово implements!
3.Да, если указать ключевое слово static
4.Нет
1.Да, если он будеь пустой
2.Да, если указать ключевое слово static
3.Да, если указать ключевое слово default
4.Нет!
1.extends
2.static
3.final
4.implements!
1.Одиночном наследование
2.Множественном наследование!
3.При перегрузке методов
4.Все вышеперечисленное
1.Абстрактные
2.Статические
3.Приватные
4.Ничего из вышеперечисленного!
1.Классы
2.Методы
3.Интерфейсы
4.Все вышеперечисленное!
1.Конструкторы
2.Статические методы
3.Не статические типы данных
4.Все вышеперчисленное!
1.А содержит В!
2.А расширяет В
3.В содержит А
4.В расширяет А
1.Feature Based
2.Role Based!
3.Method Based
4.Все вышеперечисленные
1.Имя интерфейса
2.Модификаторы интерфейса
3.Все вышеперечисленное
4.Методы интерфейса!